{
  "name": "SEO Agent 1",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "hours",
              "hoursInterval": 2
            }
          ]
        }
      },
      "id": "6aa68770-e755-479a-ba8c-612149860e3c",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "position": [
        380,
        240
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "mode": "list",
          "value": "16rMg45cnPeJMoaCQmmhF5dvsbpkwtINUTx57WEkcDDM",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/16rMg45cnPeJMoaCQmmhF5dvsbpkwtINUTx57WEkcDDM/edit?usp=drivesdk",
          "cachedResultName": "Example SEO research"
        },
        "sheetName": {
          "__rl": true,
          "mode": "list",
          "value": 268886635,
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/16rMg45cnPeJMoaCQmmhF5dvsbpkwtINUTx57WEkcDDM/edit#gid=268886635",
          "cachedResultName": "Blogs (ideas)"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "Completed",
              "lookupValue": "={{ false }}"
            }
          ]
        },
        "options": {}
      },
      "id": "f1ff97aa-bcdc-4364-b4ae-ec11cc18003c",
      "name": "Google Sheets",
      "type": "n8n-nodes-base.googleSheets",
      "position": [
        560,
        240
      ],
      "typeVersion": 4.5,
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "operation": "sendAndWait",
        "select": "channel",
        "channelId": {
          "__rl": true,
          "mode": "list",
          "value": "C090P7V3QUQ",
          "cachedResultName": "n8n-trigger"
        },
        "message": "={\n  \"blocks\": [\n    {\n      \"type\": \"section\",\n      \"text\": {\n        \"type\": \"mrkdwn\",\n        \"text\": \"*New article waiting to be published on Webflow*:{{ $('Content writer').item.json.output.match(/^# (.*)/)?.[1] || 'Untitled' }}\"\n      },\n      \"accessory\": {\n        \"type\": \"image\",\n        \"image_url\": \"{{ $json.output }}\",\n        \"alt_text\": \"Article thumbnail\"\n      }\n    }\n  ]\n}",
        "options": {}
      },
      "id": "dd180a33-b9aa-4a14-a38d-a04536abbdb5",
      "name": "Slack",
      "type": "n8n-nodes-base.slack",
      "position": [
        2260,
        480
      ],
      "webhookId": "1aed847c-e1d6-42a6-8944-6cb36558911f",
      "typeVersion": 2.3,
      "disabled": true
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "mode": "list",
          "value": "16rMg45cnPeJMoaCQmmhF5dvsbpkwtINUTx57WEkcDDM",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/16rMg45cnPeJMoaCQmmhF5dvsbpkwtINUTx57WEkcDDM/edit?usp=drivesdk",
          "cachedResultName": "Example SEO research"
        },
        "sheetName": {
          "__rl": true,
          "mode": "list",
          "value": 268886635,
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/130zi0ImQlwMxzYEFXE9yUOmjqZ5u-d2gyUUc5ncKP5c/edit#gid=268886635",
          "cachedResultName": "Blogs (ideas)"
        },
        "columns": {
          "value": {
            "Completed": "=true",
            "row_number": "={{ $('Google Sheets').item.json.row_number }}"
          },
          "schema": [
            {
              "id": "URL",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "URL",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Traffic",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "Traffic",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Traffic value",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "Traffic value",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Top keyword",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "Top keyword",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Position",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "Position",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Completed",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "Completed",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "row_number",
              "type": "string",
              "display": true,
              "removed": false,
              "readOnly": true,
              "required": false,
              "displayName": "row_number",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            }
          ],
          "mappingMode": "defineBelow",
          "matchingColumns": [
            "row_number"
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "id": "f8387b8d-e8d1-4da5-b815-6289e1dcd8a0",
      "name": "Google Sheets1",
      "type": "n8n-nodes-base.googleSheets",
      "position": [
        2580,
        540
      ],
      "typeVersion": 4.5
    },
    {
      "parameters": {
        "operation": "create",
        "siteId": "648717e882e5860a12ab9d1c",
        "collectionId": "64b1bae9c2d06f1241365376",
        "live": true,
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "cover-image",
              "fieldValue": "={{ $('get_image_url').item.json.output }}"
            },
            {
              "fieldId": "name",
              "fieldValue": "={{ $('Content writer').item.json.output.article.match(/<h2>(.*?)<\\/h2>/)?.[1].trim() || '' }}"
            },
            {
              "fieldId": "article-body-text",
              "fieldValue": "={{ $('Content writer').item.json.output.article.replace(/<h1>|<\\/h1>/g, '') }}"
            },
            {
              "fieldId": "read-time",
              "fieldValue": "5 min"
            },
            {
              "fieldId": "short-paragraph",
              "fieldValue": "={{ $('Content writer').item.json.output.summary }}"
            },
            {
              "fieldId": "first-post-image",
              "fieldValue": "={{ $('get_image_url').item.json.output }}"
            }
          ]
        }
      },
      "id": "3a698234-d89e-4b65-b6d6-5a0f1a789362",
      "name": "Webflow",
      "type": "n8n-nodes-base.webflow",
      "position": [
        2580,
        360
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "amount": 30
      },
      "id": "b3d6d99a-5789-47f8-993d-c15d64008e9c",
      "name": "Wait",
      "type": "n8n-nodes-base.wait",
      "position": [
        2100,
        240
      ],
      "webhookId": "506e3c2e-e023-4473-99f7-6ff9649500b8",
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "url": "={{ $json.urls.get }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer <token>"
            }
          ]
        },
        "options": {}
      },
      "id": "6aa76909-9f71-4ef6-819f-b40b31afad91",
      "name": "get_image_url",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        2300,
        240
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.replicate.com/v1/models/black-forest-labs/flux-1.1-pro/predictions",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer <token> //move this up"
            },
            {
              "name": "Prefer",
              "value": "wait"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n\"input\": {\n      \"prompt\": \"{{$json.output.replace(/[\\\"“”’\\n]/g, '')}}\",\n      \"go_fast\": false,\n      \"lora_scale\": 1,\n      \"megapixels\": \"1\",\n      \"num_outputs\": 1,\n      \"aspect_ratio\": \"16:9\",\n      \"output_format\": \"png\",\n      \"guidance_scale\": 3.5,\n      \"output_quality\": 100,\n      \"prompt_strength\": 0.8,\n      \"extra_lora_scale\": 1,\n      \"num_inference_steps\": 50\n}\n}",
        "options": {}
      },
      "id": "617c762e-b3b1-4b5e-a578-cf10fc34fc2f",
      "name": "HTTP Request1",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        2140,
        20
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are an expert SEO writer working for www.productai.photo.\n\nRewrite the following article directly and return the full SEO-optimized version **in one complete response**, in **JSON** format with the following structure:\n\n{\n  \"article\": \"HTML Markdown-formatted article goes here\",\n  \"summary\": \"1–2 sentence summary of the article here\"\n}\n\nReturn only the requested output with no explanations, commentary, or additional text.\n\n## Guidelines:\n- Use the primary keyword:{{ $('Google Sheets').item.json['Top keyword'] }}  throughout the article, naturally and repeatedly.\n- Follow this exact structure based on the original HTML:\n  1. Header Navigation (SEO context)\n  2. Hero Section (main headline + paragraph)\n  3. Main Content Sections (H2s, H3s, internal links <a> tags)\n  4. Use Case Explanations\n  5. Step-by-Step Tutorial (numbered list with headings)\n  6. Call-to-Action Section (use link: create.productai.photo)\n  8. Technical SEO elements (image alt text, responsive, semantic)\n\n## Markdown Formatting:\n- Don't use H1 for the article title, start with H2.\n- Use H2 html tag for main sections and H3 html tag for subsections.\n- Short paragraphs, clear headings, internal links where relevant.\n- All CTA buttons or links use <a> tag must point to: **create.productai.photo**\n- Add **bold**, *italic*, and lists <li> where helpful.\n- User rich text elements HTML:\n* Paragraphs\n* Heading tags (H1-H6)\n* Images\n* Image captions\n* Image alt attributes\n* Custom code\n* Block quotes\n* Unordered lists (bulleted)\n* Ordered lists (numbered)\n* Videos (Youtube, Vimeo)\n* Rich media (Google maps, SoundCloud, Imgur, Giphy, Codepen, and more)\n\n## Output Rules:\n- DO NOT say “I will now rewrite...” or \"I'll rewrite the article based on your requirements. \" explain anything, just return the article.\n- DO NOT include planning or step-by-step generation.\n- Just return the **fully rewritten markdown article** in the required JSON structure.\n- Include a brief SEO-friendly summary.\n- Instead of a competition company name like (PixelCut, pixelcut, CreatorKit, Soona, Pebblely), ALWAYS use \"ProductAI\"\n\n## Source Article:\nRewrite the following article: {{ $('Google Sheets').item.json.URL }} \n\n\n## Content Structure:\n{{ $json.output }} \n\n## Take internal links from webflow tool",
        "hasOutputParser": true,
        "options": {}
      },
      "id": "1cb84f16-fb56-4424-87ca-ef7b417bc675",
      "name": "Content writer",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        1240,
        320
      ],
      "executeOnce": false,
      "typeVersion": 1.9,
      "alwaysOutputData": false,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are an expert at generating detailed prompts for AI image generators (like Midjourney or DALL-E) to create eye-catching, clickable thumbnail images.\n\nYour Task:\nGiven the full text of an article, analyze and identify its main topic and tone. Based on your analysis, create a clear, visually descriptive prompt suitable for generating a thumbnail image that will attract viewers and convey the essence of the article.\n\nGuidelines:\n\nHighlight the article’s key theme, main characters or elements, and any emotions you want the image to evoke.\nSuggest specific visuals, colors, moods, and, if suitable, stylish text overlays.\nKeep the prompt concise but rich in visual detail so the resulting image will be engaging and informative.\nAvoid vague terms—be as specific as possible.\nExample Input:\n(Article about the rise of electric vehicles and their impact on the auto industry.)\n\nExample Output:\n\"Create a bold, modern thumbnail depicting a sleek electric car zooming down a futuristic highway with city skyscrapers in the background. Use vibrant blues and greens to symbolize innovation and eco-friendliness. Add stylized lightning bolts and a glowing 'EV Revolution' text overlay. Convey excitement and progress.\"\n\nArticle:\n{{ $('Content writer').item.json.output.article }}",
        "options": {}
      },
      "id": "5378c664-f3a0-4994-bc70-2537bbcf3ea0",
      "name": "Prompt engineer",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        2120,
        -120
      ],
      "typeVersion": 1.9
    },
    {
      "parameters": {
        "options": {
          "prompt": "Instructions:\n--------------\nOutput the format as:\n{\n\"article\": \"long article text\",\n\"summary\": \"summary of article\"\n}\n\n--------------\nCompletion:\n--------------\nAll attibutes are full field is {{completed}}\n\n--------------\n\nAbove, the Completion did not satisfy the constraints given in the Instructions.\nError:\n--------------\n{error}\n--------------\n\nPlease try again. Please only respond with an answer that satisfies the constraints laid out in the Instructions:\n\nWrite the article and give output"
        }
      },
      "id": "987a83b2-fd21-410b-883c-972bed450744",
      "name": "Auto-fixing Output Parser",
      "type": "@n8n/n8n-nodes-langchain.outputParserAutofixing",
      "position": [
        1660,
        400
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n\"article\": \"long article text\",\n\"summary\": \"summary of article\",\n\"author\": \"Marko Balažic\"\n}"
      },
      "id": "5ff4a6dc-478b-434c-be19-4a7764fae258",
      "name": "Structured Output Parser1",
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "position": [
        1700,
        580
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "o4-mini",
          "cachedResultName": "o4-mini"
        },
        "options": {}
      },
      "id": "7cbe39af-934d-4e08-a6e8-7a0bc0792d18",
      "name": "OpenAI Mini model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        1860,
        580
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "url": "={{ $('Google Sheets').item.json.URL }}",
        "options": {}
      },
      "id": "0a9c2f2a-74a0-4458-9772-1f179f72cc21",
      "name": "HTTP Request",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        780,
        240
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "select": "channel",
        "channelId": {
          "__rl": true,
          "mode": "list",
          "value": "C090P7V3QUQ",
          "cachedResultName": "n8n-trigger"
        },
        "text": "Looks like Content writer produced nothing",
        "otherOptions": {}
      },
      "id": "d8dd7b38-8f47-4108-8eae-b9d8d244ee2b",
      "name": "Send error",
      "type": "n8n-nodes-base.slack",
      "position": [
        2260,
        660
      ],
      "webhookId": "b36fbb7c-6995-4a0d-8b23-c6d33b8d1bfb",
      "executeOnce": true,
      "typeVersion": 2.3
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are an expert SEO writer. You will get page data return me bulltpoints for what sections are being used in this webpage. for example:\n- content\n- faq\n- testimonials \n\n{{ $json.data }}\n\nFor each section also give me what is the key point for SEO",
        "hasOutputParser": true,
        "options": {}
      },
      "id": "f3bd1da9-f8d8-455f-8245-10214757a5c5",
      "name": "Page structure analiser",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        800,
        380
      ],
      "executeOnce": true,
      "typeVersion": 1.9,
      "alwaysOutputData": false,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "claude-3-5-haiku-20241022",
          "cachedResultName": "Claude Haiku 3.5"
        },
        "options": {}
      },
      "id": "26e8c76a-2757-418b-ba84-2b25c3dedcf8",
      "name": "Haiku ",
      "type": "@n8n/n8n-nodes-langchain.lmChatAnthropic",
      "position": [
        780,
        540
      ],
      "typeVersion": 1.3
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "claude-sonnet-4-20250514",
          "cachedResultName": "Claude Sonnet 4"
        },
        "options": {
          "maxTokensToSample": 4096,
          "thinking": false
        }
      },
      "id": "377815f1-836f-4c60-9a37-11b95ce78dff",
      "name": "Thinking Claude",
      "type": "@n8n/n8n-nodes-langchain.lmChatAnthropic",
      "position": [
        1220,
        580
      ],
      "typeVersion": 1.3
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\nconst updatedItems = items.map((item) => {\n  let html = item?.json?.data;\n\n  // Trim to body\n  let bodyStart = html.indexOf(\"<body>\");\n  let bodyEnd = html.indexOf(\"</body>\") + 7;\n  html = html.slice(bodyStart, bodyEnd);\n\n  // Remove header\n  html = html.replace(/<header>[\\s\\S]*?<\\/header>/g, \"\");\n\n  // Remove scripts\n  html = html.replace(/<script>[\\s\\S]*?<\\/script>/g, \"\");\n\n  // Remove iframes\n  html = html.replace(/<iframe[\\s\\S]*?<\\/iframe>/g, \"\");\n\n  item.json.data = html;\n  return item;\n});\n\nreturn updatedItems;\n"
      },
      "id": "a4d948a0-ef50-41aa-b8c1-7f8975892dd9",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "position": [
        920,
        240
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "mode": "list",
          "value": "7FHTcSuCIjHvvBfe",
          "cachedResultName": "Shape workflows — SEO Content evaluator"
        },
        "workflowInputs": {
          "value": {
            "article": "={{ $json.output.article }}",
            "summary": "={{ $json.output.summary }}"
          },
          "schema": [
            {
              "id": "article",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "article",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "summary",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "summary",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            }
          ],
          "mappingMode": "defineBelow",
          "matchingColumns": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "id": "10c9cb74-c278-45a6-8135-9634e8123a91",
      "name": "Execute Workflow",
      "type": "n8n-nodes-base.executeWorkflow",
      "position": [
        1680,
        -80
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "content": "## Content production ",
        "height": 560,
        "width": 420,
        "color": 7
      },
      "id": "2ccbbf0a-bfa8-443f-b591-00877a2926c2",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2040,
        -180
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Content publishing",
        "height": 580,
        "width": 500,
        "color": 7
      },
      "id": "8e3e8d1d-df4c-476a-96ff-7dbf796d7f79",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2500,
        260
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "9b3a8635-f22e-4fba-8cea-8860d729fcba",
      "name": "No Operation, do nothing",
      "type": "n8n-nodes-base.noOp",
      "position": [
        2780,
        480
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Human check",
        "height": 440,
        "width": 300,
        "color": 7
      },
      "id": "d22a2c78-be4a-441d-b6d7-8512e859b058",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2160,
        400
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## SEO quality vatidation ",
        "height": 280,
        "width": 400,
        "color": 7
      },
      "id": "219e004a-4c3e-4429-8fba-8da5e7b0c24d",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1620,
        -180
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "ce170e51-4f33-4b18-bf9d-85416b7c5ad6",
              "operator": {
                "type": "number",
                "operation": "gt"
              },
              "leftValue": "={{ $json.output[1].percent_ok }}",
              "rightValue": 60
            },
            {
              "id": "39161f8c-bba5-4c48-b2d3-dda06a7ea84d",
              "operator": {
                "type": "number",
                "operation": "gt"
              },
              "leftValue": "={{ $json.output[5].percent_ok }}",
              "rightValue": 60
            },
            {
              "id": "b8c3b829-3450-4952-816e-9240cf235f58",
              "operator": {
                "type": "number",
                "operation": "gt"
              },
              "leftValue": "={{ $json.output[8].percent_ok }}",
              "rightValue": 50
            }
          ]
        },
        "options": {}
      },
      "id": "1bb10244-18f0-441c-8a66-e4b94cdf3993",
      "name": "Is it good enough?",
      "type": "n8n-nodes-base.if",
      "position": [
        1860,
        -80
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "ce170e51-4f33-4b18-bf9d-85416b7c5ad6",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              },
              "leftValue": "={{ $json.output.article }}",
              "rightValue": ""
            }
          ]
        },
        "options": {}
      },
      "id": "6c95a0e3-4d54-4c5d-aa90-49725e764364",
      "name": "Article written?",
      "type": "n8n-nodes-base.if",
      "position": [
        1680,
        220
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "content": "## Content layout?",
        "height": 500,
        "width": 400,
        "color": 7
      },
      "id": "b8e60f6a-4fa0-49ba-a954-26fa56316f82",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        740,
        160
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Content writer",
        "height": 560,
        "width": 860,
        "color": 7
      },
      "id": "6888385a-fd76-42ee-a0f7-dfcc8fb8cadf",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1160,
        180
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Get URLs of current related articles on productai.photo so they can be used ad internal links.",
        "operation": "getAll",
        "siteId": "648717e882e5860a12ab9d1c",
        "collectionId": "64b1bae9c2d06f1241365376"
      },
      "id": "597da5ef-259e-4186-a633-e0ebe876dd8a",
      "name": "Get Articles",
      "type": "n8n-nodes-base.webflowTool",
      "position": [
        1380,
        580
      ],
      "typeVersion": 2
    }
  ],
  "pinData": {},
  "connections": {
    "Code": {
      "main": [
        [
          {
            "node": "Page structure analiser",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "get_image_url",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Slack": {
      "main": [
        [
          {
            "node": "Google Sheets1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Webflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Haiku ": {
      "ai_languageModel": [
        [
          {
            "node": "Page structure analiser",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Webflow": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send error": {
      "main": [
        []
      ]
    },
    "Get Articles": {
      "ai_tool": [
        [
          {
            "node": "Content writer",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get_image_url": {
      "main": [
        [
          {
            "node": "Slack",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Content writer": {
      "main": [
        [
          {
            "node": "Article written?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets1": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prompt engineer": {
      "main": [
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Thinking Claude": {
      "ai_languageModel": [
        [
          {
            "node": "Content writer",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Article written?": {
      "main": [
        [
          {
            "node": "Execute Workflow",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "Execute Workflow": {
      "main": [
        [
          {
            "node": "Is it good enough?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Google Sheets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Mini model": {
      "ai_languageModel": [
        [
          {
            "node": "Prompt engineer",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Auto-fixing Output Parser",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Is it good enough?": {
      "main": [
        [
          {
            "node": "Prompt engineer",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Content writer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Page structure analiser": {
      "main": [
        [
          {
            "node": "Content writer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Auto-fixing Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Content writer",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser1": {
      "ai_outputParser": [
        [
          {
            "node": "Auto-fixing Output Parser",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "556899c4-d1da-49e7-a8e0-0f50f2f20332",
  "meta": {
    "templateId": "5374",
    "instanceId": "cc8f133c6b2788cd28510635eb18c7ac65e81c233dc270f5844521365a240b25"
  },
  "id": "VOYWmur7RnuCQBmn",
  "tags": []
}